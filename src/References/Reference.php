<?php

namespace PDOWrapper\References;


use PDOWrapper\PDOWrapper;

abstract class Reference
{
    /** @var PDOWrapper | null */
    protected $pdoWrapper = null;

    /** @var string */
    protected $dbName;

    /**
     * Reference constructor.
     *
     * @param string $dbName The name of the database being accessed by the resulting PDO connection. This is used in helper methods for mssql connections.
     */
    public function __construct(string $dbName)
    {
        $this->dbName = $dbName;
    }

    /**
     * The extended class should use its internal information to generate a PDOWrapper to save to
     * its internal $pdoWrapper variable.
     *
     * Classes extending this method should either successfully create an instance
     * of PDOWrapper or throw an error which exist the script to avoid further
     * errors in script execution.
     *
     * @return void
     */
    protected abstract function generateWrapper();

    /**
     * Returns the PDOWrapper generated by the Reference's data.
     * If the PDOWrapper doesn't exist, the Reference tries to create it
     * using the internal data.
     *
     * @return null|PDOWrapper
     */
    public function getWrapper()
    {
        if ($this->pdoWrapper === null) {
            $this->generateWrapper();
        }

        return $this->pdoWrapper;
    }
}